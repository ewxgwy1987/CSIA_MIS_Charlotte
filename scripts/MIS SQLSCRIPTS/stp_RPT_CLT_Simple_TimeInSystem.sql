GO
USE [BHSDB_CLT_Demo];
GO

--Simple Bag Volume Statistics

ALTER PROCEDURE dbo.stp_RPT_CLT_Simple_TimeInSystem
		  @DTFrom DATETIME,
		  @DTTo DATETIME
AS
BEGIN
	DECLARE @HOURRANGE INT=1;
	DECLARE @DATERANGE INT=1;

	--Create table for all bags time detail
	--Start Time when bags entering into system BY GID at the entrance ATR
	--End Time when bags are sorted to MU BY GID at the mainline ATR
	CREATE TABLE #TMP_STIS_BAGS_TIMEDETAIL
	(
		LICENSE_PLATE varchar(10),
		FIRST_ATR_GID varchar(10),
		STARTTIME datetime,
		SECOND_ATR_GID varchar(10),
		ENDTIME datetime,
		TRAVEL_DURATION INT,
	);

	--1. Insert bag info(license plate) and entering time BY GID at the entrance ATR
	INSERT INTO #TMP_STIS_BAGS_TIMEDETAIL
	SELECT 
		CASE
			WHEN ISC.LICENSE_PLATE1 NOT LIKE '1%' AND ISC.LICENSE_PLATE1<>'0000000000' AND ISC.LICENSE_PLATE1<>'999999999' AND LEN(LICENSE_PLATE1)=10
				THEN ISC.LICENSE_PLATE1
			WHEN ISC.LICENSE_PLATE2 NOT LIKE '1%' AND ISC.LICENSE_PLATE2<>'0000000000' AND ISC.LICENSE_PLATE2<>'999999999' AND LEN(LICENSE_PLATE1)=10
				THEN ISC.LICENSE_PLATE2
		END AS LICENSE_PLATE, 
		ISC.GID AS FIRST_ATR_GID,
		GUD.TIME_STAMP AS STARTTIME,
		NULL AS SECOND_ATR_GID,
		NULL AS ENDTIME,
		NULL AS TRAVEL_DURATION
	FROM ITEM_SCANNED ISC, 
		 GID_USED GUD, 
		 LOCATIONS GID_LOC,
		 LOCATIONS ISC_LOC WITH(NOLOCK)
	WHERE ISC.GID=GUD.GID 
		AND ISC.TIME_STAMP BETWEEN @DTFROM AND @DTTO
		AND GUD.TIME_STAMP BETWEEN DATEADD(DAY,-@HOURRANGE,@DTFROM) AND DATEADD(DAY,@HOURRANGE,@DTTO)
		AND ISC.LOCATION=ISC_LOC.LOCATION_ID
		AND EXISTS( SELECT * FROM MIS_SS_LINE_DEVICE MSLD WHERE MSLD.ATR_LOCATION=ISC_LOC.LOCATION)
		AND GUD.LOCATION=GID_LOC.LOCATION_ID AND GUD.BAG_TYPE='01'
		AND EXISTS( SELECT * FROM MIS_SS_LINE_DEVICE MSLD WHERE MSLD.GID_LOCATION=GID_LOC.LOCATION)
		AND (ISC.LICENSE_PLATE1 NOT LIKE '1%' OR ISC.LICENSE_PLATE2 NOT LIKE '1%')
		AND (	 (ISC.LICENSE_PLATE1 <>'0000000000' AND ISC.LICENSE_PLATE1<>'999999999' AND LEN(LICENSE_PLATE1)=10) 
			  OR (ISC.LICENSE_PLATE2 <>'0000000000' AND ISC.LICENSE_PLATE2<>'999999999' AND LEN(LICENSE_PLATE1)=10)
			)
	
	--SELECT * FROM #TMP_STIS_BAGS_TIMEDETAIL;

	--2. Query the data of the bags which are proceeded to make-up carousel
	SELECT IPR.GID, MAX(IPR.TIME_STAMP) AS TIME_STAMP
	INTO #TMP_STIS_ITEM_PROCEEDED
	FROM ITEM_PROCEEDED IPR,LOCATIONS PRD_LOC WITH(NOLOCK)
	WHERE IPR.TIME_STAMP BETWEEN DATEADD(HOUR,-@HOURRANGE,@DTFROM) AND DATEADD(HOUR,@HOURRANGE,@DTTO)
		AND IPR.PROCEED_LOCATION=PRD_LOC.LOCATION_ID
		AND PRD_LOC.SUBSYSTEM LIKE 'MU%'
	GROUP BY IPR.GID;

	--4. Update the end time BY GID at the mainline ATR with same license plate
	UPDATE SBT
	SET SBT.SECOND_ATR_GID=ISC.GID, SBT.ENDTIME=IPR.TIME_STAMP
	FROM #TMP_STIS_BAGS_TIMEDETAIL SBT, 
		 ITEM_SCANNED ISC, 
		 LOCATIONS ISC_LOC,
		 #TMP_STIS_ITEM_PROCEEDED IPR WITH(NOLOCK)
	WHERE (SBT.LICENSE_PLATE=ISC.LICENSE_PLATE1 OR SBT.LICENSE_PLATE=ISC.LICENSE_PLATE2)
		AND ISC.LOCATION=ISC_LOC.LOCATION_ID
		AND ISC.TIME_STAMP BETWEEN DATEADD(HOUR,-@HOURRANGE,@DTFROM) AND DATEADD(HOUR,@HOURRANGE,@DTTO)
		AND ISC_LOC.SUBSYSTEM LIKE 'ML%'
		AND ISC.GID=IPR.GID

	--5. Update the end time by GID at MES with same license plate
	UPDATE SBT
	SET SBT.SECOND_ATR_GID=IEC.GID, SBT.ENDTIME=IPR.TIME_STAMP
	FROM #TMP_STIS_BAGS_TIMEDETAIL SBT, 
		 ITEM_ENCODED IEC, 
		 LOCATIONS LOC,
		 #TMP_STIS_ITEM_PROCEEDED IPR WITH(NOLOCK)
	WHERE	SBT.LICENSE_PLATE=IEC.LICENSE_PLATE
		AND IEC.TIME_STAMP BETWEEN DATEADD(HOUR,-@HOURRANGE,@DTFROM) AND DATEADD(HOUR,@HOURRANGE,@DTTO)
		AND IEC.GID=IPR.GID
		AND SBT.SECOND_ATR_GID IS NULL

	--SELECT * FROM #TMP_STIS_BAGS_TIMEDETAIL;

	--6. Calculate the duration(SECONDS) between start time and end time
	UPDATE SBT
	SET SBT.TRAVEL_DURATION = DATEDIFF(SECOND,SBT.STARTTIME,SBT.ENDTIME)
	FROM #TMP_STIS_BAGS_TIMEDETAIL SBT
	WHERE SBT.ENDTIME IS NOT NULL AND SBT.STARTTIME IS NOT NULL;

	--SELECT * FROM #TMP_STIS_BAGS_TIMEDETAIL;

	DECLARE @MAX_TIME INT; --SECONDES
	DECLARE @MIN_TIME INT; --SECONDES
	DECLARE @AVG_TIME INT; --SECONDES

	SELECT	@MAX_TIME = MAX(SBT.TRAVEL_DURATION),
			@MIN_TIME = MIN(SBT.TRAVEL_DURATION),
			@AVG_TIME = AVG(SBT.TRAVEL_DURATION)
	FROM	#TMP_STIS_BAGS_TIMEDETAIL SBT

	IF @MAX_TIME IS NULL SET @MAX_TIME = 0;
	IF @MIN_TIME IS NULL SET @MIN_TIME = 0;
	IF @AVG_TIME IS NULL SET @AVG_TIME = 0;

	SELECT @MAX_TIME AS MAX_TIME, @MIN_TIME AS MIN_TIME, @AVG_TIME AS AVG_TIME
END

--DECLARE @DTFrom [datetime]='2014-4-4';
--DECLARE @DTTo [datetime]='2014-4-5';
--exec stp_RPT_CLT_Simple_TimeInSystem @DTFrom,@DTTo