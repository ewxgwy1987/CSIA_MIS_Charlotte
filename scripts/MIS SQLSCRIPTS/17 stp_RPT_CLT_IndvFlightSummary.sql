GO
USE [BHSDB];
GO


ALTER PROCEDURE dbo.stp_RPT_CLT_IndvFlightSummary
		  @DTFROM datetime , 
		  @DTTO datetime,
		  @AIRLINE varchar(max) , 
		  @FLIGHTNUM varchar(max)
		  --@DETAIL_MARK int
AS
BEGIN
	PRINT 'BAGTAG STORED PROCEDURE BEGIN';
	DECLARE @DATERANGE INT=1;

	--Create temp table for final result

	
	CREATE TABLE #IFS_FLIGHTSUMMARY_TEMP 
	(
		FLIGHT_NUMBER VARCHAR(5),
		AIRLINE VARCHAR(3),
		CLOSEOUT_TIME DATETIME,
		NUMBER_ALLBAGS INT,
		NUMBER_BAGSORTED INT,
		NUMBER_BAGS_ONTIME INT,
		NUMBER_BAGS_INSYSTEM INT,
		NUMBER_BAGS_LATE INT
	);

	--CREATE TABLE FOR BAGGAGES DETAIL
	CREATE TABLE #IFS_BAGSDETAIL_TEMP
	(
		AIRLINE varchar(3),
		FLIGHT_NUMBER varchar(5),
		SDO datetime,
		SOURCE varchar(1),
		BSM_TIME_STAMP datetime,
		CLOSEOUT_TIME datetime,
		LICENSE_PLATE varchar(10),
		PAX_NAME VARCHAR(200),
		LASTEST_GID varchar(10),
		TAG_READ_TIME DATETIME,
		SORTED_MARK int, -- Indicate whether this bag is sorted
		SORTED_TIMESTAMP datetime,-- Indicate when this bag is sorted
		SORTED_ONTIME_MARK int, -- Indicate whether this bag is sorted on time
		BAG_LATE_MARK int -- Indicate whether this bag is sorted late BY IRD
	);

	--1. Query flight info that its STO is between @DTFROM and @DTTO
	SELECT  FPS.AIRLINE,FPS.FLIGHT_NUMBER,FPS.SDO,FPS.STO,FPS.EDO,FPS.ETO,FPA.ALLOC_CLOSE_OFFSET,FPA.ALLOC_CLOSE_RELATED 
	INTO #IFS_FLIGHT_PLAN_ALLOC_TEMP
	FROM FLIGHT_PLAN_SORTING FPS WITH(NOLOCK)
	LEFT JOIN FLIGHT_PLAN_ALLOC fpa WITH(NOLOCK)
	ON	FPS.AIRLINE=FPA.AIRLINE AND FPS.FLIGHT_NUMBER=FPA.FLIGHT_NUMBER AND FPS.SDO=FPA.SDO
		AND CONVERT(datetime,CONVERT(VARCHAR,fpa.SDO,103)+' '+DBO.RPT_GETFORMATTEDSTO(fpa.STO),103) BETWEEN @DTFROM AND @DTTO
		AND fpa.TIME_STAMP=(SELECT MAX(TIME_STAMP) 
							FROM FLIGHT_PLAN_ALLOC FPA2 WITH(NOLOCK)
							WHERE FPA2.AIRLINE=fpa.AIRLINE 
								AND FPA2.FLIGHT_NUMBER=fpa.FLIGHT_NUMBER 
								AND FPA2.SDO=fpa.SDO
						   )
	WHERE CONVERT(datetime,CONVERT(VARCHAR,FPS.SDO,103)+' '+DBO.RPT_GETFORMATTEDSTO(FPS.STO),103) BETWEEN @DTFROM AND @DTTO
		AND FPS.AIRLINE IN (SELECT * FROM RPT_GETPARAMETERS(@AIRLINE)) 
		AND FPS.FLIGHT_NUMBER IN (SELECT * FROM DBO.RPT_GETPARAMETERS(@FLIGHTNUM));

	--2. Insert into all bags detail from bag_sorting to #IFS_BAGSDETAIL_TEMP
	INSERT INTO #IFS_BAGSDETAIL_TEMP
	SELECT DISTINCT BSA.AIRLINE, BSA.FLIGHT_NUMBER, BSA.SDO, SOURCE, BSA.TIME_STAMP AS BSM_TIME_STAMP, 
		CASE FPA.ALLOC_CLOSE_RELATED
			WHEN 'ETD' 
				--THEN CONVERT(DATETIME,CONVERT(VARCHAR,FPA.EDO,103) + ' ' + DBO.RPT_GETFORMATTEDSTO(dbo.SAC_OFFSETOPERATOR(FPA.ETO,FPA.ALLOC_CLOSE_OFFSET)),103)
				THEN DBO.RPT_TIME_CAL(FPA.EDO,FPA.ETO,FPA.ALLOC_CLOSE_OFFSET)
			WHEN 'STD' 
				--THEN CONVERT(DATETIME,CONVERT(VARCHAR,FPA.SDO,103) + ' ' + DBO.RPT_GETFORMATTEDSTO(dbo.SAC_OFFSETOPERATOR(FPA.STO,FPA.ALLOC_CLOSE_OFFSET)),103)
				THEN DBO.RPT_TIME_CAL(FPA.SDO,FPA.STO,FPA.ALLOC_CLOSE_OFFSET)
		END AS CLOSEOUT_TIME, 
		LICENSE_PLATE, (ISNULL(GIVEN_NAME,'')+' '+ISNULL(SURNAME,'')+' '+ISNULL(OTHERS_NAME,'')) AS PAX_NAME,
		'' AS LASTEST_GID, NULL AS TAG_READ_TIME, 0 AS SORTED_MARK, NULL AS SORTED_TIMESTAMP, 0 AS SORTED_ONTIME_MARK, 0 AS BAG_LATE_MARK
	FROM 
	(
		SELECT AIRLINE, FLIGHT_NUMBER, SDO, SOURCE, TIME_STAMP, LICENSE_PLATE, GIVEN_NAME, SURNAME, OTHERS_NAME
		FROM BAG_SORTING WITH(NOLOCK)
		WHERE SDO BETWEEN DATEADD(DAY,-@DATERANGE,@DTFROM) AND DATEADD(DAY,@DATERANGE,@DTTO)	
		UNION ALL
		SELECT AIRLINE, FLIGHT_NUMBER, SDO, SOURCE, TIME_STAMP, LICENSE_PLATE, GIVEN_NAME, SURNAME, OTHERS_NAME
		FROM BAG_SORTING_HIS WITH(NOLOCK)
		WHERE SDO BETWEEN DATEADD(DAY,-@DATERANGE,@DTFROM) AND DATEADD(DAY,@DATERANGE,@DTTO)	

	) AS BSA, #IFS_FLIGHT_PLAN_ALLOC_TEMP FPA
	WHERE BSA.AIRLINE=FPA.AIRLINE AND BSA.FLIGHT_NUMBER=FPA.FLIGHT_NUMBER AND BSA.SDO=FPA.SDO ;

	CREATE INDEX #IFS_BAGSDETAIL_TEMP_IDXLP ON #IFS_BAGSDETAIL_TEMP(LICENSE_PLATE);


	--3. Query the ATR read info into temp table #BT_ITEM_TAGREAD_TEMP
	SELECT ISC.GID, ISC.LICENSE_PLATE1, ISC.LICENSE_PLATE2, ISC.LOCATION, ISC.TIME_STAMP INTO #IFS_ITEM_TAGREAD_TEMP
	FROM ITEM_SCANNED ISC, #IFS_BAGSDETAIL_TEMP FBD WITH(NOLOCK)
	WHERE (ISC.LICENSE_PLATE1=FBD.LICENSE_PLATE OR ISC.LICENSE_PLATE2=FBD.LICENSE_PLATE)
		AND ISC.TIME_STAMP BETWEEN DATEADD(DAY,-@DATERANGE,@DTFROM) AND DATEADD(DAY,@DATERANGE,@DTTO)
		AND (ISC.STATUS_TYPE='1' OR ISC.STATUS_TYPE='3' OR ISC.STATUS_TYPE='7');
	--ORDER BY ISC.TIME_STAMP DESC; 

	--4. Query the MES read info into temp table #BT_ITEM_TAGREAD_TEMP 
	INSERT INTO #IFS_ITEM_TAGREAD_TEMP
	SELECT IEC.GID,IEC.LICENSE_PLATE AS LICENSE_PLATE1,'0000000000' AS LICENSE_PLATE2,IEC.LOCATION,IEC.TIME_STAMP 
	FROM ITEM_ENCODED IEC,#IFS_BAGSDETAIL_TEMP FBD WITH(NOLOCK)
	WHERE IEC.LICENSE_PLATE=FBD.LICENSE_PLATE
		AND IEC.TIME_STAMP BETWEEN DATEADD(DAY,-@DATERANGE,@DTFROM) AND DATEADD(DAY,@DATERANGE,@DTTO)

	--In Charlotte project, there are 2 ATRs and MES a bag may goes through. 
	--So stored procedure must find the lastest location where item_scanned telegram is sent ordered by time_stamp
	--SELECT GID, LICENSE_PLATE1, LICENSE_PLATE2, LOCATION, MAX(TIME_STAMP) AS TIME_STAMP INTO #IFS_TAGREAD_TEMP
	--FROM #IFS_ITEM_TAGREAD_TEMP
	--GROUP BY GID, LICENSE_PLATE1, LICENSE_PLATE2, LOCATION;

	DECLARE @TAGREAD_TABLE AS TAGREAD_TABLETYPE; --For the parameter of stp_RPT_GET_LATEST_TAGREAD

	INSERT INTO @TAGREAD_TABLE
	SELECT * FROM #IFS_ITEM_TAGREAD_TEMP;

	CREATE TABLE #IFS_TAGREAD_TEMP
	( 
		GID VARCHAR(10),
		LICENSE_PLATE VARCHAR(10), 
		--LICENSE_PLATE2 VARCHAR(10), 
		LOCATION VARCHAR(20), 
		TIME_STAMP DATETIME
	);

	INSERT INTO #IFS_TAGREAD_TEMP
	EXEC dbo.stp_RPT_GET_LATEST_TAGREAD @TAGREAD_TABLE;

	CREATE INDEX #IFS_TAGREAD_TEMP_IDXLP1 ON #IFS_TAGREAD_TEMP(LICENSE_PLATE);
	--CREATE INDEX #IFS_TAGREAD_TEMP_IDXLP2 ON #IFS_TAGREAD_TEMP(LICENSE_PLATE2);

	--5. Update ATR OR MES read info(Latest GID and TAG_READ_TIME) into #IFS_BAGSDETAIL_TEMP
	UPDATE FBT
	SET FBT.LASTEST_GID=FTT.GID, FBT.TAG_READ_TIME=ftt.TIME_STAMP
	FROM #IFS_TAGREAD_TEMP FTT, #IFS_BAGSDETAIL_TEMP FBT
	WHERE FTT.LICENSE_PLATE=FBT.LICENSE_PLATE

	--6. Update sorted info (SORTED_MARK, SORTED_TIMESTAMP, SORTED_ONTIME_MARK) into #IFS_BAGSDETAIL_TEMP
	--BAG ONTIME OR LATE IS DECIDED BY ITEM_SCANNED(MAINLINE) TIME_STAMP
	UPDATE FBT
	SET FBT.SORTED_MARK=1, 
		FBT.SORTED_TIMESTAMP=IPR.TIME_STAMP,
		FBT.SORTED_ONTIME_MARK=
		CASE
			WHEN FBT.TAG_READ_TIME<FBT.CLOSEOUT_TIME THEN 1 
			ELSE 0
		END,
		FBT.BAG_LATE_MARK=
		CASE
			WHEN FBT.TAG_READ_TIME>=FBT.CLOSEOUT_TIME THEN 1
			ELSE 0
		END
	FROM ITEM_PROCEEDED IPR, LOCATIONS LOC,#IFS_BAGSDETAIL_TEMP FBT WITH(NOLOCK)
	WHERE IPR.GID=FBT.LASTEST_GID AND FBT.LASTEST_GID IS NOT NULL
		AND IPR.PROCEED_LOCATION = LOC.LOCATION_ID
		AND LOC.SUBSYSTEM LIKE 'MU%'
		AND IPR.TIME_STAMP BETWEEN DATEADD(DAY,-@DATERANGE,@DTFROM) AND DATEADD(DAY,@DATERANGE,@DTTO);

	--7. Update bag late mark(BAG_LATE_MARK) into #IFS_BAGSDETAIL_TEMP
	--UPDATE FBT
	--SET FBT.BAG_LATE_MARK=1
	--FROM ITEM_REDIRECT IRD, #IFS_BAGSDETAIL_TEMP FBT WITH(NOLOCK)
	--WHERE IRD.GID=FBT.LASTEST_GID AND FBT.LASTEST_GID IS NOT NULL
	--	AND IRD.REASON='5'--TOO LATE
	--	AND IRD.TIME_STAMP BETWEEN DATEADD(DAY,-@DATERANGE,@DTFrom) AND DATEADD(DAY,@DATERANGE,@DTTo);

	--8. Finally, get the statistic result or detail result
	INSERT	INTO #IFS_FLIGHTSUMMARY_TEMP
	SELECT	DISTINCT FLIGHT_NUMBER,AIRLINE,
			NULL AS CLOSEOUT_TIME, 
			0 AS NUMBER_ALLBAGS, 
			0 AS NUMBER_BAGSORTED,
			0 AS NUMBER_BAGS_ONTIME,
			0 AS NUMBER_BAGS_INSYSTEM,
			0 AS NUMBER_BAGS_LATE
	FROM FLIGHT_PLAN_SORTING FPS WITH(NOLOCK)
	WHERE CONVERT(datetime,CONVERT(VARCHAR,FPS.SDO,103)+' '+DBO.RPT_GETFORMATTEDSTO(FPS.STO),103) BETWEEN @DTFROM AND @DTTO
		AND AIRLINE IN (SELECT * FROM RPT_GETPARAMETERS(@AIRLINE)) 
		AND FLIGHT_NUMBER IN (SELECT * FROM DBO.RPT_GETPARAMETERS(@FLIGHTNUM));

	UPDATE	FLTSUM
	SET		FLTSUM.CLOSEOUT_TIME=FLTSTC.CLOSEOUT_TIME,
			FLTSUM.NUMBER_ALLBAGS=FLTSTC.NUMBER_ALLBAGS,
			FLTSUM.NUMBER_BAGSORTED=FLTSTC.NUMBER_BAGSORTED,
			FLTSUM.NUMBER_BAGS_ONTIME=FLTSTC.NUMBER_BAGS_ONTIME,
			FLTSUM.NUMBER_BAGS_INSYSTEM=FLTSTC.NUMBER_BAGS_INSYSTEM,
			FLTSUM.NUMBER_BAGS_LATE=FLTSTC.NUMBER_BAGS_LATE
	FROM	(SELECT FLIGHT_NUMBER, AIRLINE, CLOSEOUT_TIME,
				COUNT(LICENSE_PLATE) AS NUMBER_ALLBAGS,
				SUM(SORTED_MARK) AS NUMBER_BAGSORTED,
				SUM(SORTED_ONTIME_MARK) AS NUMBER_BAGS_ONTIME,
				0 AS NUMBER_BAGS_INSYSTEM, 
				SUM(BAG_LATE_MARK) AS NUMBER_BAGS_LATE
			FROM #IFS_BAGSDETAIL_TEMP FBT
			GROUP BY FBT.FLIGHT_NUMBER,FBT.AIRLINE,FBT.CLOSEOUT_TIME
			) AS FLTSTC,#IFS_FLIGHTSUMMARY_TEMP FLTSUM
	WHERE	FLTSUM.AIRLINE=FLTSTC.AIRLINE AND FLTSUM.FLIGHT_NUMBER=FLTSTC.FLIGHT_NUMBER;

	UPDATE #IFS_FLIGHTSUMMARY_TEMP
	SET NUMBER_BAGS_INSYSTEM=NUMBER_ALLBAGS-NUMBER_BAGSORTED;



	--Insert each bag data of the individual flight into ##MIS_IFS_INDIVIDUAL_FLIGHT_DETAIL
	IF EXISTS (SELECT NAME FROM sys.sysobjects WHERE NAME LIKE 'MIS_IFS_INDIVIDUAL_FLIGHT_DETAIL%')
	BEGIN
			DROP TABLE MIS_IFS_INDIVIDUAL_FLIGHT_DETAIL;
	END

	--delete from ##MIS_IFS_INDIVIDUAL_FLIGHT_DETAIL;

	--SELECT * FROM #IFS_BAGSDETAIL_TEMP;

	CREATE TABLE MIS_IFS_INDIVIDUAL_FLIGHT_DETAIL
	(
		LICENSE_PLATE VARCHAR(10),
		PAX_NAME VARCHAR(200),
		BSM_TIME_STAMP DATETIME,
		TAG_READ_TIME DATETIME,
		SORTED_TIMESTAMP DATETIME
	)

	INSERT INTO MIS_IFS_INDIVIDUAL_FLIGHT_DETAIL
	SELECT IBT.LICENSE_PLATE,ibt.PAX_NAME,ibt.BSM_TIME_STAMP,ibt.TAG_READ_TIME,ibt.SORTED_TIMESTAMP
	FROM #IFS_BAGSDETAIL_TEMP ibt
	ORDER BY ibt.CLOSEOUT_TIME;
	

	SELECT * FROM #IFS_FLIGHTSUMMARY_TEMP;
END

--DECLARE @DTFROM DATETIME='2014-1-1';
--DECLARE @DTTO DATETIME='2014-1-3';
--DECLARE @AIRLINE varchar(max)='SQ';
--DECLARE @FLIGHTNUM varchar(max)='1114';
--EXEC stp_RPT17_IndvFlightSummary_GWYTEST @DTFROM,@DTTO,@AIRLINE,@FLIGHTNUM;

--SELECT * FROM MIS_IFS_INDIVIDUAL_FLIGHT_DETAIL;