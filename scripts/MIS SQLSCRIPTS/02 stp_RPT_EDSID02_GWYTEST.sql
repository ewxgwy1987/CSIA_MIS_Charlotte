GO
USE [BHSDB];
GO


ALTER PROCEDURE dbo.stp_RPT_EDSID_GWYTEST
		  --@SCREEN_DATE datetime
		  @DTFROM DATETIME,
		  @DTTO DATETIME
AS
BEGIN
--Problem1: 1500P time stamp is not the removed time
--Problem2: What is the location name of CBRA in IPR proceed location

	PRINT 'BAGTAG STORED PROCEDURE BEGIN';
	DECLARE @DATERANGE INT=1;
	DECLARE @MINUTERANGE INT=60;

	--Create temp table for final result
	CREATE TABLE #EI_EDSID_TEMP 
	(
		GID bigint,
		LICENSE_PLATE varchar(10),
		GIDUSE_TIMESTAMP datetime,
		SCREEN_LOCATION varchar(20),
		SCREENED_TIME datetime,
		CLEARED_TIME datetime,
		CLEARED_LOCATION VARCHAR(20),
		CBRA_GID bigint,
		CBRA_DELIVERED_TIME datetime,
		CBRA_REMOVED_TIME datetime,
		BMAM_BAG_TYPE varchar(15)
	);

	---------------#REGION 1 FOR IN-SPEC(NORMAL) BAGGAGES
	--1. Query baggage measure info into final table
	--DECLARE @NEW_SCREEN_DATE datetime=CONVERT(datetime,CONVERT(varchar,@SCREEN_DATE,103),103);

	-------------------------------------Commented by Guo Wenyu 2014/1/4-------------------------------------
	--Because some bags are lost during moving, so the GID from GID_USED should be used as the index in the report

	--INSERT INTO #EI_EDSID_TEMP
	--SELECT DISTINCT im.GID, NULL AS LICENSE_PLATE, NULL AS GIDUSE_TIMESTAMP, NULL AS SCREEN_LOCATION, NULL AS SCREENED_TIME, 
	--	   NULL AS CLEARED_TIME, NULL AS CBRA_GID, NULL AS CBRA_DELIVERED_TIME, NULL AS CBRA_REMOVED_TIME,
	--	   'In-Spec' AS BMAM_BAG_TYPE
	--	   --CASE im.TYPE
	--		  -- WHEN '01' THEN 'in-Spec'
	--		  -- WHEN '00' THEN 'OOG'
	--		  -- ELSE 'wrong'
	--	   --END as BMAM_BAG_TYPE
	--FROM ITEM_MEASURED im WITH(NOLOCK)
	--WHERE im.TIME_STAMP BETWEEN @NEW_SCREEN_DATE AND DATEADD(DAY,@DATERANGE,@NEW_SCREEN_DATE)
	--	AND IM.TYPE='2'; --'in-Spec'NORMAL BAG
	
	-------------------------------------New Code added by Guo Wenyu 2014/1/4-------------------------------------
	INSERT INTO #EI_EDSID_TEMP
	SELECT DISTINCT GID.GID, NULL AS LICENSE_PLATE, GID.TIME_STAMP AS GIDUSE_TIMESTAMP, NULL AS SCREEN_LOCATION, NULL AS SCREENED_TIME, 
		   NULL AS CLEARED_TIME,NULL AS CLEARED_LOCATION, NULL AS CBRA_GID, NULL AS CBRA_DELIVERED_TIME, NULL AS CBRA_REMOVED_TIME,
		   CASE 
			   WHEN IM.TYPE='2' THEN 'In-Spec'
			   WHEN IM.TYPE='1' THEN 'OOG'
			   WHEN IM.TYPE IS NULL THEN ''
			   ELSE ''
		   END as BMAM_BAG_TYPE
	FROM LOCATIONS LOC,GID_USED GID WITH(NOLOCK)
	LEFT JOIN ITEM_MEASURED IM WITH(NOLOCK) 
		ON GID.GID=IM.GID
		AND IM.TIME_STAMP BETWEEN DATEADD(MINUTE,-@MINUTERANGE,@DTFROM) AND DATEADD(MINUTE,@MINUTERANGE,@DTTO) --DATEADD(DAY,@DATERANGE,@NEW_SCREEN_DATE)
	WHERE GID.TIME_STAMP BETWEEN @DTFROM AND @DTTO --DATEADD(DAY,@DATERANGE,@NEW_SCREEN_DATE)
		AND GID.LOCATION=LOC.LOCATION_ID
		AND (LOC.LOCATION LIKE 'SS%' OR LOC.LOCATION LIKE 'ED%' OR LOC.LOCATION LIKE 'OOG%' OR LOC.LOCATION LIKE 'SB%')
		AND (LOC.LOCATION <> 'OOG1-5' AND LOC.LOCATION <> 'OOG2-4');
	-------------------------------------END by Guo Wenyu 2014/1/4 END-------------------------------------


	--select * from #EI_EDSID_TEMP where gid='3211000311';

	CREATE NONCLUSTERED INDEX #EI_EDSID_TEMP_GID ON #EI_EDSID_TEMP(GID);

	--2. Update GID time stamp(GIDUSE_TIMESTAMP) into final table
	--Commented by Guo Wenyu 2014/1/4
	--Same reason with 1
	--UPDATE eet
	--SET eet.GIDUSE_TIMESTAMP=gu.TIME_STAMP
	--FROM GID_USED gu, #EI_EDSID_TEMP eet WITH(NOLOCK)
	--WHERE eet.GID=gu.GID
	--	AND gu.TIME_STAMP BETWEEN DATEADD(DAY,-@DATERANGE,@SCREEN_DATE) AND DATEADD(DAY,@DATERANGE,@SCREEN_DATE);


	--3. Update license plate(LICENSE_PLATE) into final table
	UPDATE eet
	SET eet.LICENSE_PLATE=
		--COMMNET BY GUO WENYU ON 2014/01/12
		--CASE 
		--	WHEN isc.LICENSE_PLATE1 like '0%' AND isc.LICENSE_PLATE1<>'0000000000'
		--		THEN isc.LICENSE_PLATE1
		--	ELSE
		--		(
		--			CASE 
		--				WHEN isc.LICENSE_PLATE2 like '0%' AND isc.LICENSE_PLATE2<>'0000000000' 
		--					THEN isc.LICENSE_PLATE2
		--				ELSE NULL
		--			END
		--		)
		--END
		CASE
			WHEN ISC.LICENSE_PLATE1 LIKE '0%' AND ISC.LICENSE_PLATE1<>'0000000000' AND ISC.LICENSE_PLATE1<>'999999999' AND LEN(LICENSE_PLATE1)=10
				THEN ISC.LICENSE_PLATE1
			WHEN ISC.LICENSE_PLATE2 LIKE '0%' AND ISC.LICENSE_PLATE2<>'0000000000' AND ISC.LICENSE_PLATE2<>'999999999' AND LEN(LICENSE_PLATE1)=10
				THEN ISC.LICENSE_PLATE2
			WHEN LEN(ISC.LICENSE_PLATE1)=10 AND ISC.LICENSE_PLATE1 LIKE '1%'
				THEN ISC.LICENSE_PLATE1 --NULL
			WHEN LEN(ISC.LICENSE_PLATE2)=10 AND ISC.LICENSE_PLATE2 LIKE '1%'
				THEN ISC.LICENSE_PLATE2 --NULL
			ELSE ISC.LICENSE_PLATE1
		END
	FROM ITEM_SCANNED isc, #EI_EDSID_TEMP eet WITH(NOLOCK)
	WHERE isc.GID=eet.GID
		AND isc.TIME_STAMP BETWEEN DATEADD(DAY,-@DATERANGE,@DTFROM) AND DATEADD(DAY,@DATERANGE,@DTTO);

	CREATE NONCLUSTERED INDEX #EI_EDSID_TEMP_LP ON #EI_EDSID_TEMP(LICENSE_PLATE);

	--4. Query screen info into a tempary table #EI_ITEM_SCREENED_TEMP
	SELECT icr.GID, icr.SCREEN_LEVEL, loc.LOCATION, icr.TIME_STAMP, icr.RESULT_TYPE INTO #EI_ITEM_SCREENED_TEMP
	FROM ITEM_SCREENED icr, LOCATIONS loc, #EI_EDSID_TEMP eet WITH(NOLOCK)
	WHERE eet.GID=icr.GID
		AND (icr.SCREEN_LEVEL='1' OR icr.SCREEN_LEVEL='2' OR icr.SCREEN_LEVEL='3')
		AND icr.TIME_STAMP BETWEEN DATEADD(MINUTE,-@MINUTERANGE,@DTFROM) AND DATEADD(MINUTE,@MINUTERANGE,@DTTO)
		AND icr.LOCATION=loc.LOCATION_ID;
		--AND eet.BMAM_BAG_TYPE='In-Spec';

	--SELECT * FROM #EI_ITEM_SCREENED_TEMP;

	--5. Update screen info(SCREEN_LOCATION,SCREENED_TIME) into final table when bag type is 'in-spec'
	--SCREEN BY: ITEM_SCREENED.LOCATION
	--TIME SCREENED: ITEM_SCREENED.TIME_STAMP
	--TIME CLEARED: ITEM_PROCEEDED.TIME_STAMP to clear line
	UPDATE eet
	SET		eet.SCREEN_LOCATION=ICR.LOCATION, 
			eet.SCREENED_TIME=ICR.TIME_STAMP, 
			EET.CLEARED_TIME=IPR.TIME_STAMP, 
			EET.CLEARED_LOCATION=(	SELECT TOP 1 PRELOC.LOCATION
									FROM LOCATIONS PRELOC
									WHERE IPR.PROCEED_LOCATION=PRELOC.LOCATION_ID)
	FROM	#EI_EDSID_TEMP EET
	--AFTER FAT, IT SHOULD BE MODIFIED AS BELOW:
	LEFT JOIN #EI_ITEM_SCREENED_TEMP ICR ON EET.GID=ICR.GID 
	----SCREENED_TIME is assigned to item_tracking time_stamp before EDS
	--LEFT JOIN ITEM_TRACKING ITI WITH(NOLOCK)
	--	ON EET.GID=ITI.GID 
	--	AND ITI.TIME_STAMP BETWEEN DATEADD(DAY,-@DATERANGE,@SCREEN_DATE) AND DATEADD(DAY,@DATERANGE,@SCREEN_DATE)
	--	AND EXISTS(
	--				SELECT ELD.POST_XM_LOCATION 
	--				FROM GET_RPT_EDS_LINE_DEVICE() ELD, LOCATIONS LOC
	--				WHERE ELD.SUBSYSTEM=LOC.SUBSYSTEM AND ELD.PRE_XM_LOCATION=LOC.LOCATION 
	--					AND ITI.LOCATION=LOC.LOCATION_ID
	--			  )

	--SCREENED_TIME is assigned to ITEM_PROCEEDED time_stamp to clear line
	LEFT JOIN ITEM_PROCEEDED IPR WITH(NOLOCK)
		ON EET.GID=IPR.GID 
		AND IPR.TIME_STAMP BETWEEN DATEADD(MINUTE,-@MINUTERANGE,@DTFROM) AND DATEADD(MINUTE,@MINUTERANGE,@DTTO)
		AND EXISTS(
					SELECT ELD.EDS_LOCATION 
					FROM GET_RPT_EDS_LINE_DEVICE() ELD, LOCATIONS LOC
					WHERE ELD.SUBSYSTEM=LOC.SUBSYSTEM 
						AND ELD.CLEAR_LOCATION=LOC.LOCATION
						--AND (ELD.CLEAR_LOCATION=LOC.LOCATION OR ELD.REJECT_LOCATION=LOC.LOCATION)
						AND IPR.PROCEED_LOCATION=LOC.LOCATION_ID
					UNION ALL
					SELECT PRELOC.LOCATION
					FROM LOCATIONS PRELOC
					WHERE IPR.PROCEED_LOCATION=PRELOC.LOCATION_ID
						AND PRELOC.LOCATION IN ('OOG1-15B','OOG2-17B','ED9-33B')
				  )
	--WHERE EET.GID=ICR.GID 
		--AND icr.SCREEN_LEVEL='1'
		--AND (icr.RESULT_TYPE='12' OR icr.RESULT_TYPE='22')--CLEARED

	
	
	----6. Update screen cleared time(CLEARED_TIME) into final table
	--UPDATE eet
	--SET eet.CLEARED_TIME=icr.TIME_STAMP
	--FROM #EI_ITEM_SCREENED_TEMP icr, #EI_EDSID_TEMP eet
	--WHERE eet.GID=icr.GID 
	--	AND icr.SCREEN_LEVEL='2'
	--	AND (icr.RESULT_TYPE='12' OR icr.RESULT_TYPE='22');--CLEARED

	--------------------END #REGION 1 END----------------------

	---------------#REGION 2 FOR OOG BAGGAGES------------------
	
	--7. Insert OOG bags GID into final table from the oog lines
	INSERT INTO #EI_EDSID_TEMP
	SELECT
	    GID.GID,
	    NULL AS LICENSE_PLATE,
	    GID.TIME_STAMP AS GIDUSE_TIMESTAMP,
	    NULL AS SCREEN_LOCATION,
	    NULL AS SCREENED_TIME,
	    NULL AS CLEARED_TIME,
		NULL AS CLEARED_LOCATION,
	    GID.GID AS CBRA_GID,
	    NULL AS CBRA_DELIVERED_TIME,
	    NULL AS CBRA_REMOVED_TIME,
	    'OOG' AS BMAM_BAG_TYPE
	FROM GID_USED GID, LOCATIONS LOC WITH(NOLOCK)
	WHERE GID.TIME_STAMP BETWEEN @DTFROM AND @DTTO
		AND GID.LOCATION=LOC.LOCATION_ID
		AND (LOC.LOCATION = 'OOG1-5' OR LOC.LOCATION = 'OOG2-4');

	--------------------END #REGION 2 END----------------------

	--8. Update CBRA Delivered time(CBRA_DELIVERED_TIME) into final table
	UPDATE eet
	SET eet.CBRA_DELIVERED_TIME=ipr.TIME_STAMP
	FROM ITEM_PROCEEDED ipr, LOCATIONS loc, #EI_EDSID_TEMP eet WITH(NOLOCK)
	WHERE ipr.GID=eet.GID AND eet.GID IS NOT NULL
		AND ipr.PROCEED_LOCATION=loc.LOCATION_ID AND loc.SUBSYSTEM LIKE 'SB%'--Maybe another name
		AND ipr.TIME_STAMP BETWEEN DATEADD(MINUTE,-@MINUTERANGE,@DTFROM) AND DATEADD(MINUTE,@MINUTERANGE,@DTTO)



	--9. Update CBRA Removed time and new GID(CBRA_REMOVED_TIME) into final table
	--some problem here
	--PROBLEM: Telegram 1500P is not sent when bags are removed, but before bags are moved to inspection tables.
	UPDATE eet
	SET eet.CBRA_GID=i1500.GID, eet.CBRA_REMOVED_TIME=i1500.TIME_STAMP
	FROM ITEM_1500P i1500, #EI_EDSID_TEMP eet WITH(NOLOCK)
	WHERE ((i1500.LICENSE_PLATE=eet.LICENSE_PLATE AND eet.LICENSE_PLATE IS NOT NULL) OR (i1500.GID=eet.GID)) 
		AND i1500.TIME_STAMP BETWEEN DATEADD(MINUTE,-@MINUTERANGE,@DTFROM) AND DATEADD(MINUTE,@MINUTERANGE,@DTTO)

	select * from #EI_EDSID_TEMP
	ORDER BY GIDUSE_TIMESTAMP;
END

		  
--DECLARE @DTFROM datetime='2014-1-4';
--DECLARE @DTTO DATETIME DATETIME=''
--exec stp_RPT_EDSID_GWYTEST @screendate;
